#=================================================================#
# Template file: RIXSCam.template
# Database for the records specific to the XCAM RIXSCam driver
# February 2015

include "ADBase.template"

# Redefine the color mode choices from ADBase.template to only have those that the xcamCamera
# driver supports.  Keep the same values (xxVL), but change the menu numbers.

record(mbbo, "$(P)$(R)DataType")
{
	field(DISA, "1")
}
record(mbbo, "$(P)$(R)ColorMode")
{
	field(DISA, "1")
}

# The following (string) records are defined by hand

record(stringin, "$(P)$(R)SOFT_VERSION_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SOFT_VERSION")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)IFS_VERSION_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))IFS_VERSION")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)FPGA_VERSION_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))FPGA_VERSION")
   field(SCAN, "I/O Intr")
}

record(stringin, "$(P)$(R)CAM_SERIAL_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))CAM_SERIAL")
   field(SCAN, "I/O Intr")
}

record(waveform, "$(P)$(R)SEQ_FILENAME")
{
   field(PINI, "YES")
   field(DTYP, "asynOctetWrite")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SEQ_FILENAME")
   field(FTVL, "CHAR")
   field(NELM, "256")
   info(autosaveFields, "VAL")
}

record(waveform, "$(P)$(R)SEQ_FILENAME_RBV")
{
   field(DTYP, "asynOctetRead")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))SEQ_FILENAME")
   field(FTVL, "CHAR")
   field(NELM, "256")
   field(SCAN, "I/O Intr")
}

###################################################################
#  These records control the trigger mode                         # 
###################################################################
record(mbbo, "$(P)$(R)TriggerMode")
{
   field(PINI, "YES")
   field(DTYP, "asynInt32")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TRIGGER_MODE")
   field(ZRST, "External")
   field(ZRVL, "0")
   field(ONST, "External: Delayed Readout")
   field(ONVL, "1")
   field(TWST, "External: CCD Dump")
   field(TWVL, "2")
   field(THST, "Free Run")
   field(THVL, "3")
   field(FRST, "Free Run: Delayed Readout")
   field(FRVL, "4")
   field(FVST, "Software: CCD Dump")
   field(FVVL, "5")
   field(VAL,  "0")
   info(autosaveFields, "VAL")
}

record(mbbi, "$(P)$(R)TriggerMode_RBV")
{
   field(DTYP, "asynInt32")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TRIGGER_MODE")
   field(ZRST, "External")
   field(ZRVL, "0")
   field(ONST, "External: Delayed Readout")
   field(ONVL, "1")
   field(TWST, "External: CCD Dump")
   field(TWVL, "2")
   field(THST, "Free Run")
   field(THVL, "3")
   field(FRST, "Free Run: Delayed Readout")
   field(FRVL, "4")
   field(FVST, "Software: CCD Dump")
   field(FVVL, "5")
   field(SCAN, "I/O Intr")
}

# limit the exposure time
record(ao, "$(P)$(R)AcquireTime")
{
   field(PINI, "YES")
   field(DTYP, "asynFloat64")
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_TIME")
   field(HOPR, "655.35")
   field(LOPR, "0.001")
   field(PREC, "3")
   field(VAL,  "0.1")
   info(autosaveFields, "VAL")
}

record(ai, "$(P)$(R)AcquireTime_RBV")
{
   field(DTYP, "asynFloat64")
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))ACQ_TIME")
   field(HOPR, "655.35")
   field(LOPR, "0.001")
   field(PREC, "3")
   field(SCAN, "I/O Intr")
}



# Include records generated by PVGenerator from the Parameters.csv file
include "RIXSCamPVDefinitions.template"